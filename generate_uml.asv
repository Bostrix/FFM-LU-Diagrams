function generate_uml(projectDir)
    % Get a list of all .m files in the directory and subdirectories
    files = dir(fullfile(projectDir, '**/*.m'));
    
    % Initialize structures to store class information
    classes = struct();
    classNames = {};
    
    % Loop through each file and extract class information
    for k = 1:length(files)
        filePath = fullfile(files(k).folder, files(k).name);
        fileContents = fileread(filePath);
        
        % Check if the file is a class definition
        classIdx = regexp(fileContents, 'classdef\s+(\w+)', 'tokens');
        if ~isempty(classIdx)
            className = classIdx{1}{1};
            classNames{end+1} = className;
            classes.(className).Name = className;
            
            % Extract properties
            propIdx = regexp(fileContents, '(?<=properties).*?(?=end)', 'match', 'dotexceptnewline');
            if ~isempty(propIdx)
                properties = regexp(propIdx{1}, '\s+(\w+)\s*;', 'tokens');
                classes.(className).Properties = [properties{:}];
            end
            
            % Extract methods
            methodIdx = regexp(fileContents, '(?<=methods).*?(?=end)', 'match', 'dotexceptnewline');
            if ~isempty(methodIdx)
                methods = regexp(methodIdx{1}, '\s+(\w+)\s*\(', 'tokens');
                classes.(className).Methods = [methods{:}];
            end
        end
    end
    
    % Generate Graphviz DOT file
    dotFile = fullfile(projectDir, 'uml_class_diagram.dot');
    fid = fopen(dotFile, 'w');
    
    fprintf(fid, 'digraph G {\n');
    fprintf(fid, 'node [shape=record];\n');
    
    for i = 1:length(classNames)
        className = classNames{i};
        fprintf(fid, '%s [label="{%s|', className, className);
        
        if isfield(classes.(className), 'Properties')
            for j = 1:length(classes.(className).Properties)
                fprintf(fid, '%s\\l', classes.(className).Properties{j});
            end
        end
        
        fprintf(fid, '|');
        
        if isfield(classes.(className), 'Methods')
            for j = 1:length(classes.(className).Methods)
                fprintf(fid, '%s()\\l', classes.(className).Methods{j});
            end
        end
        
        fprintf(fid, '}"];\n');
    end
    
    fprintf(fid, '}\n');
    fclose(fid);
    
    disp('DOT file created. Use Graphviz to generate the UML diagram.');
end